@model Core.Model.AnaTable
@using Core.Model
@{
    ViewBag.Title = "PersonelCreate";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>PersonelCreate</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>AnaTable</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ProjeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProjeName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProjeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label>sponsors</label>

            <select name="SponsorName" id="cars">
                @foreach (var item in (IEnumerable<Sponsor>)ViewData["sponsors1"])
                {
                    
                    <option value="@item.SponsorName">@item.SponsorName</option>

                }
            </select>
        </div>
        </div>

    <div class="form-group">
        <label>HastaUzmanlık</label>

        <select name="PatientSpecialization" id="cars">
            @foreach (var item in (IEnumerable<HastaUzmanlık>)ViewData["HastaUzmanlık"])
            {
               
                <option value="@item.HastaUzmanlıkName">@item.HastaUzmanlıkName</option>

               

            }
        </select>
    </div>

    <div class="form-group">
        <label>CancerSpecies:</label>

        <select name="CancerSpecies" id="cars">
            @foreach (var item in (IEnumerable<KanserTürleri>)ViewData["KanserTürleri"])
            {
                
                <option value="@item.KanserTürüName">@item.KanserTürüName</option>

                

            }
        </select>
    </div>

    <div class="form-group">
        <label>MaterialType:</label>

        <select name="MaterialType" id="cars">
            @foreach (var item in (IEnumerable<MateryalTipi>)ViewData["MateryalTipi"])
            {

                <option value="@item.MateryalTipiName">@item.MateryalTipiName</option>



            }
        </select>
    </div>

    <div class="form-group">
        <label>TubeType:</label>

        <select name="TubeType" id="cars">
            @foreach (var item in (IEnumerable<TüpCinsi>)ViewData["TüpCinsi"])
            {

                <option value="@item.TüpCinsiName">@item.TüpCinsiName</option>



            }
        </select>
    </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaterialType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaterialType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaterialType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaterialQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaterialQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaterialQuantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TubeType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TubeType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TubeType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phase, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phase, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phase, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
 
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
